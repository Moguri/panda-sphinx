#! /usr/bin/env python3
import sys
import json
from common import read_toc_tree, transform_title, get_page_path

from pandocfilters import *

# This was generated by foo.py
read_toc_tree('toctree.json')
redirects = json.load(open('redirects.json'))

def convert_links(key, value, format, meta):
    if key == 'Link':
        title = stringify(value[1])
        target, target_type = value[2]

        if target_type == 'wikilink':
            target = target.replace('_', ' ')
            target = target[0].upper() + target[1:]
            if '#' in target:
                target = target.split('#', 1)[0]

            # Resolve redirects.
            while target in redirects:
                target = redirects[target]
                if '#' in target:
                    target = target.split('#', 1)[0]

            # Assert that the target page exists.
            #assert get_page_path(target), target

            target_ref = transform_title(target)
            if title == target:
                #return RawInline('rst', title)
                return RawInline('rst', ':ref:`{}`'.format(target_ref))
            else:
                return RawInline('rst', ':ref:`{} <{}>`'.format(title.strip(), target_ref))

    elif key == 'Image':
        # remove caption, replace space with underscore
        return Image(value[0], value[1], [transform_title(x) for x in value[2]])

toJSONFilter(convert_links)
